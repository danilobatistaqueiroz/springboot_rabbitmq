loopback_users.guest = true
stream.listeners.tcp.1 = 5558
#stream.listeners.tcp.1 = 127.0.0.1:5558
#stream.listeners.tcp.2 = ::1:5558
stream.advertised_host = server5
stream.advertised_port = 5555
management.tcp.port = 15678
prometheus.tcp.port = 15698
listeners.tcp.default = 5678
#listeners.tcp.local    = 127.0.0.1:5678
#listeners.tcp.local_v6 = ::1:5678

cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config

cluster_formation.classic_config.nodes.1 = rabbit@server2
cluster_formation.classic_config.nodes.2 = rabbit@server3
cluster_formation.classic_config.nodes.3 = rabbit@server4
cluster_formation.classic_config.nodes.4 = rabbit@server5
cluster_formation.classic_config.nodes.5 = rabbit@server6
cluster_formation.classic_config.nodes.6 = rabbit@server7
cluster_formation.classic_config.nodes.7 = rabbit@server8

#cluster_partition_handling = ignore
cluster_partition_handling = pause_minority
#cluster_partition_handling.pause_minority.recover = autoheal
#cluster_partition_handling = autoheal

#cluster_partition_handling = pause_if_all_down
#cluster_partition_handling.pause_if_all_down.recover = ignore
#cluster_partition_handling.pause_if_all_down.nodes.1 = rabbit@server7
#cluster_partition_handling.pause_if_all_down.nodes.2 = rabbit@server8

log.console = true

# autoheal
#The winning partition is the one which has the most clients connected 
# (or if this produces a draw, the one with the most nodes; 
# and if that still produces a draw then one of the partitions is chosen in an unspecified way).